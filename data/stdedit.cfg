
// implements some editing commands


//////// Entity Editing ///////////////

// the entity type of current selection
et = [ at (entget) 0 ]

// access the given attribute of selected ent
ea = [ at (entget) (+ $arg1 1) ]

// clear ents of given type
clearents = [ 
  if $editing [
    entcancel
    entselect [ strcmp (et) $arg1 ]; 
    echo Deleted (enthavesel) $arg1 entities; 
    delent
  ] 
]

// replace all ents that match current selection
// with the values given
replaceents = [
  if $editing [
    entfind @(entget)
    entset @arg1 @arg2 @arg3 @arg4 @arg5
    echo Replaced (enthavesel) entities  
  ]
]

selentedit      = [ "saycommand" ( concatword "/entset " (entget) ) ] 
selreplaceents  = [ "saycommand" ( concatword "/replaceents " (entget) ) ]  

// modify given attribute of ent by a given amount
entproperty = [
  a0 = (ea 0)
  a1 = (ea 1)
  a2 = (ea 2)
  a3 = (ea 3)
  do [a@arg1 = (+ (ea @arg1) @arg2)]
  entset (et) $a0 $a1 $a2 $a3
]

itemlist = [ 
  shells bullets rockets riflerounds grenades cartridges
  health healthboost greenarmour yellowarmour quaddamage
]

itemcycle = [ 
  n = (listlen $itemlist)
  loop i $n [
      if (strcmp (et) (at $itemlist $i)) [
        if (= $i (- $n 1)) [
          next = (at $itemlist 0)
        ] [
          next = (at $itemlist (+ $i 1))
        ]
      ]
  ]
  entset $next (ea 0) (ea 1) (ea 2) (ea 3) 
]

//////// Copy and Paste //////////////

entcopybuf = ""

entreplace   = [ 
  if (! (strcmp "" $entcopybuf)) [ 
    if (enthavesel) [
      entset @entcopybuf 
    ] [
      newent @entcopybuf
    ]
    result 1
  ] [
    result 0
  ]
]

editcopy   = [
  if (|| havesel [! (enthavesel)]) [
    entcopybuf = ""
    entcopy
    copy
  ] [
    entcopybuf = (entget)
  ]
]

editpaste  = [ 
  cancelpaste = (! (|| enthavesel havesel));
  || entreplace paste
  onrelease [ 
    if (strcmp "" $entcopybuf) entpaste
    if ($cancelpaste) [ cancelsel ] 
  ] 
]

/////// Selection ///////////////

equaltype  = [
  if (strcmp * $arg1) [ result 1 ] [
    result (strcmp (et) $arg1)
  ]
]

equalattr  = [
  if (strcmp * $arg2) [ result 1 ] [
    result (= (ea $arg1) $arg2)
  ]
]

// select ents with given properties
// '*' is wildcard
entfind    = [ 
  entcancel
  if (= ($numargs) 1) [
    entselect     [ equaltype @@arg1 ]     
  ] [ if (= ($numargs) 2) [
    entselect [ && (equaltype @@arg1)         [equalattr 0 @@arg2] ]
  ] [ if (= ($numargs) 3) [
    entselect [ && (equaltype @@arg1) (&&     [equalattr 0 @@arg2] [equalattr 1 @@arg3]) ]
  ] [ if (= ($numargs) 4) [
    entselect [ && (equaltype @@arg1) (&& (&& [equalattr 0 @@arg2] [equalattr 1 @@arg3])     [equalattr 2 @@arg4]) ]
  ] [
    entselect [ && (equaltype @@arg1) (&& (&& [equalattr 0 @@arg2] [equalattr 1 @@arg3]) (&& [equalattr 2 @@arg4] [equalattr 3 @@arg5])) ]
  ]]]]
]

enttoggle  = [ entmoving 1; entmoving 0; ]

// add targeted ent and start moving it
entaddmove = [
  h = (enthavesel)
  entmoving 1 
  if (< (enthavesel) $h) [ 
    entmoving 1
  ]
]

grabbing = 0

drag       = [ dragging 1; onrelease [ dragging 0 ] ]
corners    = [ selectcorners 1; dragging 1; onrelease [ selectcorners 0; dragging 0; ] ]
entadd     = [ entaddmove; entmoving 0; ]
editmove   = [ moving 1; onrelease [ moving 0 ]; result $moving ]
entdrag    = [ entaddmove; onrelease [entmoving 0]; result $entmoving ] 
editdrag   = [ cancelsel; || (entdrag) [ drag ] ]
selcorners = [ cancelsel; || (entdrag) [ corners ] ]

editextend   = [ 
  || entdrag [ selextend; reorient; editmove ]
]

editmovewith    = [
  if (havesel) [
    || (editmove) [ @arg1 ]
    onrelease [ moving 0; dragging 0 ]
  ] [
    @arg1
  ]
]

editmovecorner = [ editmovewith selcorners ]
editmovedrag   = [ editmovewith editdrag ]

////// Other Editing commands /////////

editfacewentpush = [ 
  if ($entmoving) [
    entpush $arg1
  ] [ 
    if ($moving) [ 
      pushsel $arg1 
    ] [ 
      editface $arg1 $arg2
    ] 
  ] 
]

editrotate = [ rotate $arg1; entcancel; entselect insel; entrotate $arg1 ] 
editflip   = [ flip;         entcancel; entselect insel; entflip ]

editcut    = [  
  entselect insel
  entcopy
  copy
  if (enthavesel) delent
  delcube
]

passthrough = [ passthroughcube $arg1; passthroughsel $arg1 ]
