
// implements some editing commands


//////// Entity Editing ///////////////

// the entity type of current selection
et = [ at (entget) 0 ]

// access the given attribute of selected ent
ea = [ at (entget) (+ $arg1 1) ]

// clear ents of given type
clearents = [ 
  if $editing [
    entcancel
    entselect [ strcmp (et) $arg1 ]; 
    echo Deleted (enthavesel) $arg1 entities; 
    delent
  ] 
]

// replace all ents that match current selection
// with the values given
replaceents = [
  if $editing [
    type = $arg1
    t  = (et)
    a0 = (ea 0)
    a1 = (ea 1)
    a2 = (ea 2)
    a3 = (ea 3)
    entcancel
    entselect [ && (= (ea 0) $a0) (&& (&& (strcmp (et) $t) (= (ea 1) $a1)) (&& (= (ea 2) $a2) (= (ea 3) $a3))) ]
    entset $type $arg2 $arg3 $arg4 $arg5
    echo Replaced (enthavesel) entities  
  ]
]

selentedit      = [ "saycommand" ( concatword "/entset " (entget) ) ] 
selreplaceents  = [ "saycommand" ( concatword "/replaceents " (entget) ) ]  

// modify given attribute of ent by a given amount
entproperty = [
  a0 = (ea 0)
  a1 = (ea 1)
  a2 = (ea 2)
  a3 = (ea 3)
  do [a@arg1 = (+ (ea @arg1) @arg2)]
  entset (et) $a0 $a1 $a2 $a3
]

//////// Copy and Paste //////////////

entcopybuf = ""
entcopy    = [ 
  if (enthavesel) [ 
    entcopybuf = (entget)
  ] [
    entcopybuf = ""
  ]
  result (enthavesel)
]

entpaste   = [ 
  if (! (strcmp "" $entcopybuf)) [ 
    if (enthavesel) [
      entset @entcopybuf 
    ] [
      newent @entcopybuf
    ]
    result 1
  ] [
    result 0
  ]
]

editcopy   = [ || (entcopy) copy ]
editpaste  = [ || (entpaste) paste; if (! (|| $moving $entmoving)) [onrelease [ cancelsel ]] ]

/////// Selection ///////////////

// select ents with given type
entfind    = [ entcancel; entselect [ strcmp (et) $arg1 ] ]

enttoggle  = [ entmoving 1; entmoving 0; ]

// add targeted ent and start moving it
entaddmove = [ 
  h = (enthavesel)
  entmoving 1 
  if (< (enthavesel) $h) [ 
    entmoving 1
  ]
]

entadd     = [ entaddmove; entmoving 0; ]
editmove   = [ moving 1; onrelease [ moving 0 ]; result $moving ]
entdrag    = [ entaddmove; onrelease [entmoving 0]; result $entmoving ] 
editdrag   = [ || (entdrag) [ dragging 1; onrelease [ dragging 0 ] ] ]
selcorners = [ || (entdrag) [ selectcorners 1; dragging 1; onrelease [ selectcorners 0; dragging 0; ] ] ]

editextend   = [ 
  selextend
  reorient
  || (entdrag) editmove
]

editmovewith    = [
  if (havesel) [
    || (editmove) [ @arg1 ]
    onrelease [ moving 0; dragging 0 ]
  ] [
    @arg1
  ]
]

editmovecorner = [ editmovewith selcorners ]
editmovedrag   = [ editmovewith editdrag ]

////// Other Editing commands /////////

editfacewentpush = [ 
  if ($entmoving) [
    entpush $arg1
  ] [ 
    if ($moving) [ 
      pushsel $arg1 
    ] [ 
      editface $arg1 $arg2
    ] 
  ] 
]

editrotate = [ rotate $arg1; entcancel; entselect insel; entrotate $arg1 ] 
editflip   = [ flip;         entcancel; entselect insel; entflip ]

editgrab    = [  
  copy
  delcube
  onrelease [ paste ] 
]

