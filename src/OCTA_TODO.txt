gilt:
- LOD: improved lod-remip
- other tools that are geared towards easier editing of heightfields/terrain/rocks
- "editing not in view" sometimes obstructs editing

eihrul:
- map up/download etc
- water physics close to surface
- implement variable LM sampling
- optimize overdraw in visibleface()
- add a spotlight (ask me)
- optimize per-poly raycube() by creating a bounding-sphere tree cache
- very fancy: test alpha on a polygon for ultra-quality raycube()
- improve smoothness of going up steps
- sound entities

aard (e = eihrul (or gilt) could do it):
- windows installer
- update web page | new screenshots | make description less technical (move to docs), present sauer as a freeware GAME, not as an engine (make clear only engine is OS). | change cube page to point people more clearly to sauer
- (e) per sound volume
- powerup announce | make both powerups not spawn on map start / not be in sync
- (e) bouncing gib particles
- finish up grenade launcher (skin? doc?)
- test capture mode more... | doc
- (e) set textures when extruding
- (e) triggers/doors for SP
- optimize model shader
- water shader
- monster spawner ammo
- find efficient solution for normals on world geometry
- (e) make 3rd person weapons show... how to make an axe swing rather than go back and forth?
- iconic stats
- new BAS sounds?
- (e) make health/armour/quad be available clientside, then add em to player floating text | team diff colour?
- (e) new multiplayer model.. md3?
- (e) keybinds per mode: editing/game
- player spawn sound
- make wether you are hitting other player clearer - blip sounds like q3?
- (e) hex numbers
- 3d menus
- add hidden ID to your name so that you can claim nicknames on a server?
- show quadded player with special rendering
- experiment with physics speedup features
- think about simpler area based portals / combine with doors | automatically? compute portals of each VA? REALLY need some culling for monsters/items etc
- think of cheap way to have surface normals available.. can do tangent/bin globally? keep it all in worldspace? lights?
can do bumpmapping by simply having an "average tangentspace lightvector" LM and a "occlusion and attenuation color" LM,
then no list of lights and no tangent space vectors would be needed! superior to dot3 lightmaps really?
big problem is how to get a tangent space eye vector for spec?? 
to get accurate spec, we need per vertex sub, which can only ever be worldspace. best we can do is global TS.
-> do some tests to see what current state sorting amounts to, and what would happen if you'd swap
- draw not-spawned items in wireframe?
- make start of flares etc spawn out further from the player
- importcube takes insane amounts of memory on larger maps... needs progress bar, and mapsize independent of source map
- (e) better attack anim? with weapon maybe | add vwep?
- switch to tri lists instead of quad lists, and do manual triangulation to make surface bulge only -> also for physics
- select entities in parallel to geometry by picking | make editing more readable
- (e) skybox - roll
- 3rd person view seems to really slow fps on some systems still... | plan to have mapmodels and other entities as part of octanodes?
- LOD: visibleface(lodcube==true) must not go across VA boundaries... otherwise minor HOM bewteen LOD/non-LOD rendering boundaries
- LOD: materials & sky currently always rendered at lod0 only, is that ever a problem visually/performance?
- LOD: make loddistance fov dependent (for models too)
- cube loader: import some sample cube maps | metl3
- all cfg stuff in menu
- a multiplayer player still shows SG rays go thru target | hard to fix, is it really a problem?
- new mapmodels/trees in menu -> new ones from last cube
- better damage particles
- players more visible / improve model lighting first?
- HDR
- start using md3 for new monsters/player models
- mp objectives
- 2 teams only
- sound samples for N kills in a row | accuracy stats
- sword?
- think about doing other permanent powerups besides +10h
- sounds | matt?
  * impact (diff materials + flesh)
  * flyby, both instant & projectile
  * soundspot / moving
- improve on cma render then add to sauer
- slowmo?
- VBO verts are 24 bytes, remove the next ptr, make UVs shorts or bytes? make coords shorts?
- voice during multiplayer? -> easier to use ventrillo
- give players identity to combat cheating by coupling to something like Steam?

- fix the two //BREAK

- start with rpg mode | clientside only, simplify

- system that does a calclight/savemap automatically for maps with no lighting, and and easy way to prune lighting information for release
- calclight while playing?

- new cube models -> sauer

- use of glBufferData() makes ATI driver crash on SDL_Exit()
- gui framework
- test errors / performance etc with devpartner
- (E) fix VFC entities
- some way to smooth out lighting on terrain
- (EG) fix polygons being rendered on top of eachother
  * quick fix: rotate indices of quads that produce coplanar tris
  * better fix: generate exact faces (subdivided if need be) for faces touching neighbouring cubes
- fix variance in framerate?
- (EG) landscape generation and tools (see wiki)
- (E) improve visibleface() to not render some polys inside solids anymore (overdraw!)
- (E) reduce geometry by merging surfaces and lightmaps
- render entities at distance as sprites
- try out hardware occlusion queries before portals
- (E) sort the order of rendering mapmodels, so as to factor out glbindbuffer
- SP: add pistol ammo box... make monster use it? hmmm not more hitscan
- switch to new fmod api & 3d sound? not available for bsd? openal?

- blend screen when inside a cube

    p/p     sel
0   face    aligned 4
1   cube    aligned 4
2   vert    unal 1
3   conn    unal 4
4   edge    unal 2


potential teamplay mode: similar to "battlefield":

"bases" are placed thruout the map

a base can be in 2 states: captured or neutral. When captured, it is
captured by a certain team. This is shown
by the texture its rendered with (red means enemy captured, blue means
your team, grey means neutral). The model can be a flag, or whatever.

a neutral base can be converted to your team by standing next to
it for N seconds (N = 10 or so) within a certain radius. Multiple players speed up
the process proportionally. The time accumulated to N is counted by the server as soon
as the first player enters the radius,
and reset to 0 immediately once all players of the initial team leave the radius.

a base of the enemy color can be converted to neutral in exactly the same way.
(so often it is a 2 step process to take over a base).

current team name and capture status is shown above the base using a text particle.

at the spawn of a map, all bases are neutral, and all players spawn at normal player spawns,
and try to capture whatever they can. Once bases are captured, players will
spawn at spawnpoints close to whichever of their bases is closest to an enemy base.
spawning will be preferred at bases which are not currently being captured by an enemy.

if a player dies, they wait M seconds before they can respawn again (M = 20 or so).
if you have no bases left (the enemy has captured yours, or at least made em neutral)
you can't spawn at all and have to wait for remaining players to recapture a base.
if all bases are gone and all players dead, your team loses and the match is over.

Alternatively, if this doesn't happen, at the timelimit the team that wins is the team
that has held the most bases for the most amount of time (1 point per X seconds for every
base in your color).

No points are awarded for kills or self-deaths. Infact, no individual score is ever displayed,
your score is the same as the team's score.

When you spawn, you are given a certain amount of ammo for randomly 2 weapons out of the
5 main ones, + pistol ammo. You will not be able to get more ammo unless it is placed in
the map, or if given to you by another player. Any other player can replenish your ammo
of types of ammo he doesn't have. I.e. if you have RL/MG and he has GL/MG, you can replenish
his GL ammo, and he can give you RL ammo.

A simple HUD shows bases relative to your current position in red or blue (can be a sphere with
blips on it, with blips on the border for faraway bases).

There may be additional powerups needed, to emulate the functionality of vehicles in BF,
but maybe without its already good enough.
